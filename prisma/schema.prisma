// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Patch {
  id               Int                @id @default(autoincrement())
  name             String
  description      String
  date             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  creators         String[]
  tags             Tag[]
  images           String[]
  files            String[]
  bag              Bag?               @relation(fields: [bagId], references: [id])
  bagId            Int?
  amount           Int                @default(0)
  Donation         Donation[]
  UserCreatedPatch UserCreatedPatch[]
}

model Box {
  id   Int    @id @default(autoincrement())
  name String
  bags Bag[]
  // TODO: Store amount of patches as a computed field. That is however not available in prisma yet:
  // https://github.com/prisma/prisma/issues/3394
}

model Bag {
  id      Int     @id @default(autoincrement())
  name    String
  box     Box     @relation(fields: [boxId], references: [id])
  boxId   Int
  patches Patch[]
  // TODO: Store amount of patches as a computed field.
}

model Tag {
  id              Int        @id @default(autoincrement())
  name            String
  color           String
  backgroundColor String
  description     String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  type            TagType
  patches         Patch[]
  artefacts       Artefact[]
  children        Tag[]      @relation("TagToTag")
  Tag             Tag?       @relation("TagToTag", fields: [tagId], references: [id])
  tagId           Int?

  @@unique([name, type])
}

enum TagType {
  PATCH
  ARTEFACT
}

enum EventType {
  SM_DM
  GENERAL
  ANNIVERSARY
}

model Event {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  date      String
  type      EventType @default(SM_DM)
  protocol  String?
  createdBy String    @default("axelelm")
}

model Artefact {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  date        String
  images      String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  files       String[]
  tags        Tag[]
}

model Person {
  id               Int                @id @default(autoincrement())
  name             String
  donations        Donation[]
  UserCreatedPatch UserCreatedPatch[]
}

model Donation {
  id       Int     @id @default(autoincrement())
  amount   Int     @default(1)
  Person   Person? @relation(fields: [personId], references: [id])
  personId Int?
  patch    Patch   @relation(fields: [patchId], references: [id])
  patchId  Int
}

model UserCreatedPatch {
  id       Int    @id @default(autoincrement())
  person   Person @relation(fields: [personId], references: [id])
  patch    Patch  @relation(fields: [patchId], references: [id])
  personId Int
  patchId  Int
}
